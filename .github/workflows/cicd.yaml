name: CI/CD

on: 
  push:
    branches:
        - main
        - dev

jobs:
  build:
    name: Building image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker hub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: drodriguez90/dotnet-ci-cd-poc:${{ github.sha }} 
  
  deployconfig:
    name: Updating prod environment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configuration deployment
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              echo "SERVER_HOSTNAME=${{ secrets.MAIN_SERVER_HOSTNAME }}" >> "$GITHUB_ENV"
          else
              echo "SERVER_HOSTNAME=${{ secrets.DEV_SERVER_HOSTNAME }}" >> "$GITHUB_ENV"
          fi
 
          

  update_server:
    name: updateServer
    runs-on: ubuntu-latest
    needs: deployconfig
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ env.SERVER_HOSTNAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        script: |
          docker image pull drodriguez90/dotnet-ci-cd-poc:${{ github.sha }}
          docker container stop mywebapp
          docker container prune -f
          docker run -d --name mywebapp --restart unless-stopped -p 80:80 -p 443:443 drodriguez90/dotnet-ci-cd-poc:${{ github.sha }}
          docker image prune -f   